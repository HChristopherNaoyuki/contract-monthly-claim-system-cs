@model contract_monthly_claim_system_cs.Models.ClaimViewModels.ClaimSubmissionViewModel
@{
    ViewData["Title"] = "Submit Claim";
}

<div class="container container-sm">
    <div class="hero">
        <h1 class="hero-title">Submit New Claim</h1>
        <p class="hero-subtitle">Enter your monthly claim details and upload supporting documents</p>
    </div>

    <div class="card">
        <div class="card-content">
            <form asp-action="Submit" method="post" enctype="multipart/form-data" id="claimForm">
                <div class="form-group">
                    <label asp-for="HoursWorked" class="form-label">Hours Worked</label>
                    <input asp-for="HoursWorked" class="form-control" placeholder="Enter hours worked this month" required>
                    <span asp-validation-for="HoursWorked" class="validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="HourlyRate" class="form-label">Hourly Rate</label>
                    <input asp-for="HourlyRate" class="form-control" placeholder="Enter your hourly rate" required>
                    <span asp-validation-for="HourlyRate" class="validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Amount" class="form-label">Total Amount</label>
                    <input asp-for="Amount" class="form-control" readonly>
                </div>

                <div class="form-group">
                    <label asp-for="Comments" class="form-label">Comments (Optional)</label>
                    <textarea asp-for="Comments" class="form-control form-textarea"
                              placeholder="Add any additional comments about your claim"
                              maxlength="500"></textarea>
                    <span asp-validation-for="Comments" class="validation-error"></span>
                    <div class="form-text">
                        <span id="charCount">0</span>/500 characters
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">Supporting Documents</label>
                    <div class="file-upload" id="fileUploadContainer">
                        <div class="file-upload-icon">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" stroke="currentColor" stroke-width="2" />
                                <polyline points="14,2 14,8 20,8" stroke="currentColor" stroke-width="2" />
                                <line x1="16" y1="13" x2="8" y2="13" stroke="currentColor" stroke-width="2" />
                                <line x1="16" y1="17" x2="8" y2="17" stroke="currentColor" stroke-width="2" />
                                <polyline points="10,9 9,9 8,9" stroke="currentColor" stroke-width="2" />
                            </svg>
                        </div>
                        <div class="file-upload-text">Click to upload supporting documents</div>
                        <div class="file-upload-hint">PDF, DOC, DOCX, JPG, PNG up to 5MB each</div>
                        <input type="file" id="file" name="Documents" multiple
                               accept=".pdf,.doc,.docx,.jpg,.jpeg,.png" style="display: none;">
                    </div>
                    <div id="fileList" class="file-list"></div>
                </div>

                <div class="d-flex gap-md justify-content-between">
                    <a class="btn btn-outline btn-block" asp-controller="Home" asp-action="Index">Cancel</a>
                    <button type="submit" class="btn btn-primary btn-block" id="submitBtn">
                        Submit Claim
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Calculate amount based on hours worked and hourly rate
    document.getElementById('HoursWorked').addEventListener('input', calculateAmount);
    document.getElementById('HourlyRate').addEventListener('input', calculateAmount);

    function calculateAmount()
    {
        const hours = parseFloat(document.getElementById('HoursWorked').value) || 0;
        const rate = parseFloat(document.getElementById('HourlyRate').value) || 0;
        document.getElementById('Amount').value = (hours * rate).toFixed(2);
    }

    // Character count for comments
    const commentsTextarea = document.getElementById('Comments');
    const charCount = document.getElementById('charCount');

    commentsTextarea.addEventListener('input', function()
    {
        charCount.textContent = this.value.length;
    });

    // File upload handling
    document.getElementById('file').addEventListener('change', function(e)
    {
        const container = document.getElementById('fileUploadContainer');
        const textSpan = container.querySelector('.file-upload-text');
        const fileList = document.getElementById('fileList');

        if (this.files.length > 0)
        {
            textSpan.textContent = `${this.files.length} file(s) selected`;
            container.style.borderColor = 'var(--system-blue)';
            container.querySelector('.file-upload-icon').style.backgroundColor = 'rgba(0, 122, 255, 0.1)';

            // Display file names
            fileList.innerHTML = '';
            Array.from(this.files).forEach(file =>
            {
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                fileItem.innerHTML = `
                    <div class="file-icon">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                            <path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z" stroke="currentColor"/>
                            <polyline points="13,2 13,9 20,9" stroke="currentColor"/>
                        </svg>
                    </div>
                    <div class="file-info">
                        <div class="file-name">${file.name}</div>
                        <div class="file-size">${formatFileSize(file.size)}</div>
                    </div>
                    <button type="button" class="file-remove" onclick="this.parentElement.remove()">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                            <line x1="18" y1="6" x2="6" y2="18" stroke="currentColor"/>
                            <line x1="6" y1="6" x2="18" y2="18" stroke="currentColor"/>
                        </svg>
                    </button>
                `;
                fileList.appendChild(fileItem);
            });
        }
        else
        {
            textSpan.textContent = 'Click to upload supporting documents';
            container.style.borderColor = 'var(--system-gray-4)';
            container.querySelector('.file-upload-icon').style.backgroundColor = 'var(--system-gray-6)';
            fileList.innerHTML = '';
        }
    });

    function formatFileSize(bytes)
    {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    // Initialize calculation on page load
    calculateAmount();
    charCount.textContent = commentsTextarea.value.length;
</script>