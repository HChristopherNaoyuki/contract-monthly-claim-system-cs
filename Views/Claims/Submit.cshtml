@model contract_monthly_claim_system_cs.Models.ClaimViewModels.ClaimSubmissionViewModel
@{
    ViewData["Title"] = "Submit Claim";
}

<div class="container claim-form">
    <h1>Submit New Claim</h1>

    <form asp-action="Submit" method="post" enctype="multipart/form-data" id="claimForm">
        <div class="form-group">
            <label asp-for="HoursWorked">Hours Worked</label>
            <input asp-for="HoursWorked" class="form-input" placeholder="Enter hours worked this month" required>
            <span asp-validation-for="HoursWorked" class="validation-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="HourlyRate">Hourly Rate</label>
            <input asp-for="HourlyRate" class="form-input" placeholder="Enter your hourly rate" required>
            <span asp-validation-for="HourlyRate" class="validation-error"></span>
        </div>

        <div class="form-group">
            <label asp-for="Amount">Total Amount</label>
            <input asp-for="Amount" class="form-input" readonly>
        </div>

        <div class="form-group">
            <label asp-for="Comments">Comments (Optional)</label>
            <textarea asp-for="Comments" class="form-input" placeholder="Add any additional comments about your claim" rows="3" maxlength="500"></textarea>
            <span asp-validation-for="Comments" class="validation-error"></span>
            <div style="font-size: 12px; color: var(--system-gray); margin-top: 4px;">
                <span id="charCount">0</span>/500 characters
            </div>
        </div>

        <div class="form-group">
            <label>Supporting Documents</label>
            <div class="file-upload" id="fileUploadContainer" onclick="document.getElementById('file').click()">
                <div class="icon">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                        <path d="M10 1C9.73478 1 9.48043 1.10536 9.29289 1.29289L3.29289 7.29289C3.10536 7.48043 3 7.73478 3 8V20C3 21.6569 4.34315 23 6 23H7C7.55228 23 8 22.5523 8 22C8 21.4477 7.55228 21 7 21H6C5.44772 21 5 20.5523 5 20V9H10C10.5523 9 11 8.55228 11 8V3H18C18.5523 3 19 3.44772 19 4V9C19 9.55228 19.4477 10 20 10C20.5523 10 21 9.55228 21 9V4C21 2.34315 19.6569 1 18 1H10ZM9 7H6.41421L9 4.41421V7ZM14 15.5C14 14.1193 15.1193 13 16.5 13C17.8807 13 19 14.1193 19 15.5V16V17H20C21.1046 17 22 17.8954 22 19C22 20.1046 21.1046 21 20 21H13C11.8954 21 11 20.1046 11 19C11 17.8954 11.8954 17 13 17H14V16V15.5ZM16.5 11C14.142 11 12.2076 12.8136 12.0156 15.122C10.2825 15.5606 9 17.1305 9 19C9 21.2091 10.7909 23 13 23H20C22.2091 23 24 21.2091 24 19C24 17.1305 22.7175 15.5606 20.9844 15.122C20.7924 12.8136 18.858 11 16.5 11Z"></path>
                    </svg>
                </div>
                <div class="text">
                    <span>Click to upload supporting documents</span>
                </div>
                <input type="file" id="file" name="Documents" multiple accept=".pdf,.doc,.docx,.jpg,.jpeg,.png" style="display: none;">
            </div>
            <div id="fileList" style="margin-top: 10px;"></div>
        </div>

        <button type="submit" class="btn" id="submitBtn">
            Submit Claim
        </button>
    </form>

    <div class="footer">
        <a class="btn btn-secondary" asp-controller="Home" asp-action="Index">Back to Home</a>
        <div class="copyright">© @DateTime.Now.Year - Contract Monthly Claim System</div>
    </div>
</div>

@section Scripts {
    <script>
        // Calculate amount based on hours worked and hourly rate
        document.getElementById('HoursWorked').addEventListener('input', calculateAmount);
        document.getElementById('HourlyRate').addEventListener('input', calculateAmount);

        function calculateAmount() {
            const hours = parseFloat(document.getElementById('HoursWorked').value) || 0;
            const rate = parseFloat(document.getElementById('HourlyRate').value) || 0;
            document.getElementById('Amount').value = (hours * rate).toFixed(2);
        }

        // Character count for comments
        const commentsTextarea = document.getElementById('Comments');
        const charCount = document.getElementById('charCount');

        commentsTextarea.addEventListener('input', function() {
            charCount.textContent = this.value.length;
        });

        // File upload handling
        document.getElementById('file').addEventListener('change', function(e) {
            const container = document.getElementById('fileUploadContainer');
            const textSpan = container.querySelector('.text span');
            const fileList = document.getElementById('fileList');

            if (this.files.length > 0) {
                textSpan.textContent = `${this.files.length} file(s) selected`;
                container.style.borderColor = '#007AFF';

                // Display file names
                fileList.innerHTML = '<strong>Selected files:</strong><ul style="margin-top: 5px;">';
                Array.from(this.files).forEach(file => {
                    fileList.innerHTML += `<li>${file.name} (${formatFileSize(file.size)})</li>`;
                });
                fileList.innerHTML += '</ul>';
            } else {
                textSpan.textContent = 'Click to upload supporting documents';
                container.style.borderColor = '#D2D2D7';
                fileList.innerHTML = '';
            }
        });

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Form validation
        document.getElementById('claimForm').addEventListener('submit', function(e) {
            const hours = parseFloat(document.getElementById('HoursWorked').value);
            const rate = parseFloat(document.getElementById('HourlyRate').value);

            if (isNaN(hours) || hours <= 0) {
                e.preventDefault();
                alert('Please enter valid hours worked.');
                return;
            }

            if (isNaN(rate) || rate <= 0) {
                e.preventDefault();
                alert('Please enter a valid hourly rate.');
                return;
            }

            // Validate file uploads
            const fileInput = document.getElementById('file');
            if (!validateFileUpload(fileInput)) {
                e.preventDefault();
                return;
            }

            // Show loading state
            const submitBtn = document.getElementById('submitBtn');
            submitBtn.textContent = 'Submitting...';
            submitBtn.disabled = true;
        });

        function validateFileUpload(input) {
            const maxSize = 5 * 1024 * 1024; // 5MB
            const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'image/jpeg', 'image/png'];

            if (input.files.length > 0) {
                for (let i = 0; i < input.files.length; i++) {
                    const file = input.files[i];

                    if (file.size > maxSize) {
                        alert(`File ${file.name} is too large. Maximum size is 5MB.`);
                        input.value = '';
                        return false;
                    }

                    if (!allowedTypes.includes(file.type)) {
                        alert(`File ${file.name} is not a supported file type. Please upload PDF, DOC, DOCX, JPG, or PNG files.`);
                        input.value = '';
                        return false;
                    }
                }
            }

            return true;
        }

        // Initialize calculation on page load
        calculateAmount();

        // Initialize character count
        charCount.textContent = commentsTextarea.value.length;
    </script>
}